server:
  port: 8080


spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${rds.useraname}
    password: ${rds.password}
    url: ${rds.host}

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
  data:
    redis:
      host: ${redis.host}
      port: 6379
  cache:
    type: redis

jwt:
  secret: ${jwt.secret}
  access-token-expire-time: 3600000 #1시간
  refresh-token-expire-time: 86400000 #24시간



# Swagger UI의 접근 경로를 설정합니다.
springdoc:
  swagger-ui:
    enabled: true

# Feign Client logging
logging:
  level:
    com.beside.interviewserver.external.openfeign: debug

openai:
  url: https://api.openai.com/v1/chat/completions
  model: gpt-3.5-turbo
  apikey: ${openai.apikey}

# 소셜 로그인 API 정보
provider:
  kakao:
    grantType: authorization_code
    clientId: 475a271e420239bf6ccec662994a9ce5
    redirectUri: https://getpostman.com/oauth2/callback
    authorizationUri: https://kauth.kakao.com/oauth/authorize # 카카오 로그인 요청
    accessTokenUri: https://kauth.kakao.com/oauth/token # 카카오 엑세스토큰 요청
    userInfoUri: https://kapi.kakao.com/v2/user/me # 카카오 유저 정보 요청
  google:
    grantType: authorization_code
    clientId: 964064625926-ru2ckb4v0j0klodnpivndt2gsehsme4k.apps.googleusercontent.com
    clientSecret: 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
    redirectUri: https://getpostman.com/oauth2/callback
    authorizationUri: https://nid.naver.com/oauth2.0/authorize? # 구글 로그인 요청
    accessTokenUri: https://oauth2.googleapis.com/token # 구글 엑세스토큰 요청
    userInfoUri: https://www.googleapis.com/oauth2/v1/userinfo?access_token= # 구글 유저 정보 요청
  naver:
    grantType: authorization_code
    clientId: 2RWtUf6y5dR407dw6LRG
    clientSecret: zI2QwEbhqV
    state: ""
    redirectUri: https://getpostman.com/oauth2/callback
    authorizationUri: https://nid.naver.com/oauth2.0/authorize? # 네이버 로그인 요청
    accessTokenUri: https://nid.naver.com/oauth2.0/token # 네이버 엑세스토큰 요청
    userInfoUri: https://openapi.naver.com/v1/nid/me # 네이버 유저 정보 요청

